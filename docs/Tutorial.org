#+LATEX_HEADER: \usepackage[margin=1.5cm]{geometry}

* Introduction
This tutorial serves as a practical introduction to PSIXAS and its ability to simulate 
X-ray absorption processes like X-ray photoelectron spectroscopy (XPS), 
near edge X-ray absorption fine structure (NEXAFS) and the pump-probe NEXAFS spectroscopies.

The theoretical foundation used by PSIXAS are the 
transition-potential and \Delta-Kohn-Sham method. Other, wavefunction based methods 
are planned for future implementations.


* Installation 
The most convenient way to get PSIXAS to run is to use PSI4 via 
conda or miniconda. Let's assume you created a new environment:

#+BEGIN_SRC bash
conda create -n p4env psi4 psi4-dev -c psi4
conda activate p4env
#+END_SRC
which will install the most recent stable PSI4.

Then you can checkout the PSIXAS repository into the directory where all your PSI4
plugins are located:
#+BEGIN_SRC bash
git clone https://github.com/Masterluke87/psixas
cd psixas

$(psi4 --plugin-compile)
make
#+END_SRC
If you do not want to build the master branch version, you can checkout
 another branch:
#+BEGIN_SRC bash
git checkout PSIXAS-1.0
#+END_SRC

After the plugin one needs to export the path that contains the plugin:
#+BEGIN_SRC bash
export PYTHONPATH=/path/to/psi4Plugins
#+END_SRC
The installation is complete, and PSIXAS is ready to run!

* Example 1: XPS calculation
** 3,3,3-Trifluoropropanol
For 3,3,3-Trifluoropropanol one would expect three distinct C1s signals in the XPS spectrum, each signal can be assigned 
to one carbon atom in the molecule.

The central quantity one has to calculate when simulating XPS spectra are the so-called core-electron binding energies (CEBEs).
These can be obtain via a \Delta-Kohn-Sham calculation. The CEBE for an excitation center $i$ is given 
as $\mathrm{CEBE} = E^i_{kat} - E_{neu}$, where $E_{neu}$ and $E_{kat}$ are the energies of the neutral 
and core-ionized molecule, respectively.

In this example, we are calculating the core electron binding energies with B3LYP/def2-TZVP. In order to get the energy of the 
neutral molecule, we can use the folling input:
#+BEGIN_SRC bash
import psixas

memory 16GB

molecule{
 C           -0.348376548098    -0.548474458915    -0.927836216945
 C            0.598339605925     0.344412190721    -0.154926820251
 C           -1.260377523962    -1.428990131337    -0.073815750620
 H           -0.931459004013     0.095187059173    -1.591052058736
 H            0.270520314607    -1.188949646350    -1.560246367799
 F           -0.030731307342     1.342027128065     0.491810630465
 F            1.492395966346     0.923480284909    -0.991220902737
 F            1.309169804186    -0.344637834439     0.762302565414
 H           -1.792305519830    -2.113716429507    -0.745127437896
 O           -2.163746992897    -0.714605675932     0.750272586920
 H           -0.660551886505    -2.035740348426     0.604285075819
 H           -2.747844602396    -0.181104236356     0.200201028032
symmetry c1
}

set {
  basis def2-TZVP
}

set psixas {
  prefix TRIFLUOR
  MODE GS
 }

set scf {
 reference uks
 scf_type MEM_DF
}

energy('psixas',functional='B3LYP')
#+END_SRC

* Example 2: NEXAFS calculation


* Example 3: PP-NEXAFS calculation







